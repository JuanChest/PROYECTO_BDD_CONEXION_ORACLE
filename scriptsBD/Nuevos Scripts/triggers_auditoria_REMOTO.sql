DROP TABLE AUDITORIA_OPERACIONES;

CREATE TABLE AUDITORIA_OPERACIONES (
    ID_AUDIT NUMBER GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
    TABLA      VARCHAR2(50),
    OPERACION  VARCHAR2(10),
    USUARIO    VARCHAR2(30),
    FECHA      DATE,
    INFO       VARCHAR2(4000)
);

-- Trigger para TIENDA_NORTE
CREATE OR REPLACE TRIGGER trg_audit_TIENDA_NORTE
AFTER INSERT OR UPDATE OR DELETE ON TIENDA_NORTE
FOR EACH ROW
DECLARE
    v_operacion VARCHAR2(10);
    v_info VARCHAR2(4000);
BEGIN
    IF INSERTING THEN
        v_operacion := 'INSERT';
        v_info := 'ID_TIENDA=' || :NEW.ID_TIENDA;
    ELSIF UPDATING THEN
        v_operacion := 'UPDATE';
        v_info := 'ID_TIENDA=' || :NEW.ID_TIENDA;
    ELSIF DELETING THEN
        v_operacion := 'DELETE';
        v_info := 'ID_TIENDA=' || :OLD.ID_TIENDA;
    END IF;

    INSERT INTO AUDITORIA_OPERACIONES (TABLA, OPERACION, USUARIO, FECHA, INFO)
    VALUES ('TIENDA_NORTE', v_operacion, USER, SYSDATE, v_info);
END;
/

-- Trigger para INVENTARIO_NORTE
CREATE OR REPLACE TRIGGER trg_audit_INVENTARIO_NORTE
AFTER INSERT OR UPDATE OR DELETE ON INVENTARIO_NORTE
FOR EACH ROW
DECLARE
    v_operacion VARCHAR2(10);
    v_info VARCHAR2(4000);
BEGIN
    IF INSERTING THEN
        v_operacion := 'INSERT';
        v_info := 'INVENTARIO_ID=' || :NEW.INVENTARIO_ID;
    ELSIF UPDATING THEN
        v_operacion := 'UPDATE';
        v_info := 'INVENTARIO_ID=' || :NEW.INVENTARIO_ID;
    ELSIF DELETING THEN
        v_operacion := 'DELETE';
        v_info := 'INVENTARIO_ID=' || :OLD.INVENTARIO_ID;
    END IF;

    INSERT INTO AUDITORIA_OPERACIONES (TABLA, OPERACION, USUARIO, FECHA, INFO)
    VALUES ('INVENTARIO_NORTE', v_operacion, USER, SYSDATE, v_info);
END;
/

-- Trigger para VENTAS_NORTE
CREATE OR REPLACE TRIGGER trg_audit_VENTAS_NORTE
AFTER INSERT OR UPDATE OR DELETE ON VENTAS_NORTE
FOR EACH ROW
DECLARE
    v_operacion VARCHAR2(10);
    v_info VARCHAR2(4000);
BEGIN
    IF INSERTING THEN
        v_operacion := 'INSERT';
        v_info := 'VENTA_ID=' || :NEW.VENTA_ID;
    ELSIF UPDATING THEN
        v_operacion := 'UPDATE';
        v_info := 'VENTA_ID=' || :NEW.VENTA_ID;
    ELSIF DELETING THEN
        v_operacion := 'DELETE';
        v_info := 'VENTA_ID=' || :OLD.VENTA_ID;
    END IF;

    INSERT INTO AUDITORIA_OPERACIONES (TABLA, OPERACION, USUARIO, FECHA, INFO)
    VALUES ('VENTAS_NORTE', v_operacion, USER, SYSDATE, v_info);
END;
/

-- Trigger para DETALLE_VENTA_NORTE
CREATE OR REPLACE TRIGGER trg_audit_DETALLE_VENTA_NORTE
AFTER INSERT OR UPDATE OR DELETE ON DETALLE_VENTA_NORTE
FOR EACH ROW
DECLARE
    v_operacion VARCHAR2(10);
    v_info VARCHAR2(4000);
BEGIN
    IF INSERTING THEN
        v_operacion := 'INSERT';
        v_info := 'VENTA_ID=' || :NEW.VENTA_ID || ', DETALLE_ID=' || :NEW.DETALLE_ID;
    ELSIF UPDATING THEN
        v_operacion := 'UPDATE';
        v_info := 'VENTA_ID=' || :NEW.VENTA_ID || ', DETALLE_ID=' || :NEW.DETALLE_ID;
    ELSIF DELETING THEN
        v_operacion := 'DELETE';
        v_info := 'VENTA_ID=' || :OLD.VENTA_ID || ', DETALLE_ID=' || :OLD.DETALLE_ID;
    END IF;

    INSERT INTO AUDITORIA_OPERACIONES (TABLA, OPERACION, USUARIO, FECHA, INFO)
    VALUES ('DETALLE_VENTA_NORTE', v_operacion, USER, SYSDATE, v_info);
END;
/